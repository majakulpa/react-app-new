{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","burgerBuilder","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","loading","errorMessage","error","message","authRedirect","isAuthenticated","to","className","styles","onSubmit","btnType","clicked","Component","connect","auth","token","building","dispatch","actions","input","inputElement","inputClasses","InputElement","validationError","Invalid","Error","join","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/4.6417d624.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Input from \"./../../components/UI/Input/Input\";\nimport Button from \"./../../components/UI/Button/Button\";\nimport Spinner from \"./../../components/UI/Spinner/Spinner\";\nimport styles from \"./Auth.module.css\";\nimport * as actions from \"./../../store/actions/index\";\nimport { updateObject, checkValidity } from \"./../../shared/utility\";\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\"\n        },\n        value: \"\",\n        validation: { required: true, isEmail: true },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Your Password\"\n        },\n        value: \"\",\n        validation: { required: true, minLength: 6 },\n        valid: false,\n        touched: false\n      }\n    },\n    isSignup: true\n  };\n\n  componentDidMount() {\n    if (!this.props.burgerBuilder && this.props.authRedirectPath !== \"/\") {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true\n      })\n    });\n    this.setState({ controls: updatedControls });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignup\n    );\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return { isSignup: !prevState.isSignup };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => (\n      <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        invalid={!formElement.config.valid}\n        shouldValidate={formElement.config.validation}\n        touched={formElement.config.touched}\n        changed={event => this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    return (\n      <div className={styles.Auth}>\n        {authRedirect}\n        {errorMessage}\n        <form onSubmit={this.submitHandler}>\n          {form}\n          <Button btnType=\"Success\">Submit</Button>\n        </form>\n        <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\n          Switch To {this.state.isSignup ? \"Signin\" : \"Signup\"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    burgerBuilder: state.burgerBuilder.building,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) =>\n      dispatch(actions.auth(email, password, isSignup)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Auth);\n","import React from \"react\";\nimport styles from \"./Input.module.css\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [styles.InputElement];\n  let validationError = null;\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(styles.Invalid);\n    validationError = (\n      <p className={styles.Error}>Please enter a valid value!</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option\n              key={option.value}\n              value={option.value}\n              onChange={props.changed}\n            >\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n  return (\n    <div className={styles.Input}>\n      <label className={styles.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"Error\":\"Input_Error__13mCq\"};"],"sourceRoot":""}